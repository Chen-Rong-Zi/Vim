"      ███╗   ███╗██╗   ██╗██╗   ██╗██╗███╗   ███╗██████╗  ██████╗
"      ████╗ ████║╚██╗ ██╔╝██║   ██║██║████╗ ████║██╔══██╗██╔════╝
"      ██╔████╔██║ ╚████╔╝ ██║   ██║██║██╔████╔██║██████╔╝██║
"      ██║╚██╔╝██║  ╚██╔╝  ╚██╗ ██╔╝██║██║╚██╔╝██║██╔══██╗██║
"      ██║ ╚═╝ ██║   ██║    ╚████╔╝ ██║██║ ╚═╝ ██║██║  ██║╚██████╗
"      ╚═╝     ╚═╝   ╚═╝     ╚═══╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝

"      ███╗   ███╗██╗   ██╗██╗   ██╗██╗███╗   ███╗██████╗  ██████╗
"      ████╗ ████║╚██╗ ██╔╝██║   ██║██║████╗ ████║██╔══██╗██╔════╝
"      ██╔████╔██║ ╚████╔╝ ██║   ██║██║██╔████╔██║██████╔╝██║
"      ██║╚██╔╝██║  ╚██╔╝  ╚██╗ ██╔╝██║██║╚██╔╝██║██╔══██╗██║
"      ██║ ╚═╝ ██║   ██║    ╚████╔╝ ██║██║ ╚═╝ ██║██║  ██║╚██████╗
"      ╚═╝     ╚═╝   ╚═╝     ╚═══╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝

" Leader map
let mapleader = ","

" Comment the line in visual mode
vn # <c-v>0I# <esc>
vn " <c-v>0I" <esc>
vn / <C-v>0I// <esc>
"Transform the word to UPPER-CASE
ino <c-u> <esc>viwUviwA
nn <c-u> <esc>viwU

" <Backspace> in insert mode
ino <c-i> <BS>

" inoremap <c-u> <space><space><space><space>



" ██████╗ ██╗   ██╗████████╗██╗  ██╗ ██████╗ ███╗   ██╗
" ██╔══██╗╚██╗ ██╔╝╚══██╔══╝██║  ██║██╔═══██╗████╗  ██║
" ██████╔╝ ╚████╔╝    ██║   ███████║██║   ██║██╔██╗ ██║
" ██╔═══╝   ╚██╔╝     ██║   ██╔══██║██║   ██║██║╚██╗██║
" ██║        ██║      ██║   ██║  ██║╚██████╔╝██║ ╚████║
" ╚═╝        ╚═╝      ╚═╝   ╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═══╝
"(<++>)
aug python
autocmd!
" When typing ' =  -  +  /  *  % ', add spaces automatically
au filetype python ino <buffer> + <space>+<space><left><right>
au filetype python ino <buffer> - <space>-<space><left><right>
au filetype python ino <buffer> * <space>*<space><left><right>
au filetype python ino <buffer> / <space>/<space><left><right>
au filetype python ino <buffer> % <space>%<space><left><right>
au filetype python ino <buffer> = <space>=<space><left><right>
au filetype python ino <buffer> # #<space><left><right>

" auto complete the () <> [] {}
au filetype python ino <buffer> < <><left>
au filetype python ino <buffer> ( ()<left>
au filetype python ino <buffer> [ []<left>
au filetype python ino <buffer> { {}<left>
au filetype python ino <buffer> __ ____<left><left>

au filetype python ino <buffer> __ ____<left><left>

" surround the word in the insert mode
au filetype python ino <buffer> <leader>' <esc>viwA'<esc>bi'<esc>ela
au filetype python ino <buffer> <leader>" <esc>viwA"<esc>bi"<esc>ela
au filetype python ino <buffer> <leader>( <esc>viwA)<esc>bi(<esc>ela
au filetype python ino <buffer> <leader>[ <esc>viwA]<esc>bi[<esc>ela
au filetype python ino <buffer> <leader>{ <esc>viwA}<esc>bi{<esc>ela
au filetype python ino <buffer> <leader>< <esc>viwA><esc>bi<<esc>ela

" surround the word in the normal mode
au filetype python nn <buffer> <leader>' <esc>viwA'<esc>bi'<esc>el
au filetype python nn <buffer> <leader>" <esc>viwA"<esc>bi"<esc>el
au filetype python nn <buffer> <leader>( <esc>viwA)<esc>bi(<esc>el
au filetype python nn <buffer> <leader>[ <esc>viwA]<esc>bi[<esc>el
au filetype python nn <buffer> <leader>{ <esc>viwA}<esc>bi{<esc>el
au filetype python nn <buffer> <leader>< <esc>viwa><esc>bi<<esc>el

" Comment the line
au filetype python vn <buffer> <leader>c <C-v>0I# <esc>
au filetype python nn <buffer> <leader>c <C-v>0I# <esc>

au filetype python ia <buffer> iff if:<left>
au filetype python ia <buffer> def def:<left>
au filetype python ia <buffer> class class:<left>
au filetype python ia <buffer> ret return
au filetype python ia <buffer> @@ 1398881912@qq.com
au filetype python ia <buffer> pirnt print

"  <tab> and <space> visualised
au filetype python set list
au filetype python set listchars=tab:>-,trail:-
aug END



" ██╗   ██╗██╗███╗   ███╗
" ██║   ██║██║████╗ ████║
" ██║   ██║██║██╔████╔██║
" ╚██╗ ██╔╝██║██║╚██╔╝██║
"  ╚████╔╝ ██║██║ ╚═╝ ██║
"   ╚═══╝  ╚═╝╚═╝     ╚═╝
" (<++>)
let maplocalleader = "1"

" color scheme | font
colorscheme onedark
set guifont:Consolas:h15

" number in front of lines
hi  linenr guifg=#5c6370
set ruler
set rnu
set nowrap
set ignorecase
set wildmenu
set showcmd
set cursorline
set encoding=utf-8
set scrolloff=5
set nu ru ai si ts=4 sw=4

" highlight setting
" set hlsearch
set incsearch
" 
" set lines=240 columns=160
set guioptions-=T
set guioptions-=t
set guioptions-=m
set guioptions-=l
set guioptions-=L
set guioptions-=r
set guioptions-=R
set guioptions-=b
set guioptions-=B

" set helplang=cn
set encoding=utf-8

" share the clipboard
set clipboard+=unnamed
set laststatus=2

" shut down the error warning
set novisualbell
set noerrorbells
set vb t_vb=
au guienter * set t_vb=

" syntax highlight
syntax on

" fold tab method
set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4
set smarttab
set backspace=2
set autoindent
set smartindent
set foldmethod=indent
nn ff za
nn fk zm
nn fj zr

" return to the file .vimrc
nn <leader>v :e $MYVIMRC<CR>

" return to the current directory
nn <leader>e :e .<CR>

" return to the /program files (x86)/
nn <leader>p :e/Program Files (x86)/Vim/My_Python<CR>
"
" to run the python script by type tr
nn <leader>r :w<CR>:!python "%:p"<CR>

" edit $myvimrc
nn <leader>ev :vsplit $MYVIMRC<CR>
nm <leader>sv :w<CR>:source $MYVIMRC<CR>\|\|

" tab site
nn th :-tabnext<CR>
nn tl :+tabnext<CR>

" screen create
nn sl :set nosplitright<CR>:vsplit<CR>

" screen switch
nn wk <c-w>k
nn wj <c-w>j
nn wh <c-w>h
nn wl <c-w>l

" screen size
nn _ :resize -3<CR>
nn + :resize +3<CR>
nn - :vertical resize -3<CR>
nn = :vertical resize +3<CR>

"cmap 1 !
nn w <c-w>
nn s m
nn 7 5j
nn 8 5k

" save the file in the buffer 
nn S :w<CR>

" shortcuts
ino jk <esc>

" 冒号转换行 
cno ; <CR>
nn ; <CR>
ino ; <esc>o

" spell check
nn sc :set spell!<CR>
ino <s-s><s-c> <c-x>s

" shortcuts switched
nn <space> :

" <backspace> in insert mode
cno <c-i> <bs>

" move easily by <c-h><c-l>
cno <c-h> <left>
cno <c-l> <right>
cno <c-j> <down>
cno <c-k> <up>

" move easily by <c-h><c-l>
ino <c-h> <left>
ino <c-l> <right>
ino <c-j> <down>
ino <c-k> <up>

" Anchor Point
ino <leader>f <esc>/(<++>)<CR>ca(
nn <leader>f /(<++>)<CR>
"set term=xterm-256color
" set t_co=256
"colorscheme tomorrow-night-eighties
"g:onedark_hide_endofbuffer:1
"g:onedark_termcolor:256
" set -g default-terminal"xterm-256color"
" set default-terminal"screen-256color"
ca cdp cd<space>/Program Files (x86)/Vim/My_Python<CR>




" ██████╗ ██╗     ██╗   ██╗ ██████╗       ██╗███╗   ██╗
" ██╔══██╗██║     ██║   ██║██╔════╝       ██║████╗  ██║
" ██████╔╝██║     ██║   ██║██║  ███╗█████╗██║██╔██╗ ██║
" ██╔═══╝ ██║     ██║   ██║██║   ██║╚════╝██║██║╚██╗██║
" ██║     ███████╗╚██████╔╝╚██████╔╝      ██║██║ ╚████║
" ╚═╝     ╚══════╝ ╚═════╝  ╚═════╝       ╚═╝╚═╝  ╚═══╝
"(<++>)
" NERDTree
nn tt :NERDTree<CR>

" Full Screen Set
nn \| <esc>:call libcallnr('gvim_fullscreen.dll', 'ToggleFullscreen', 0)<CR>

"" 按 F12 切换窗口透明度
no <C-j>j <esc>:call libcallnr('gvim_fullscreen.dll', 'ToggleTransparency', "100,180")<CR>
no <C-k>k <esc>:call libcallnr('gvim_fullscreen.dll', 'ToggleTransparency', "225,255")<CR>

" easymotion
map <leader>s <plug>(easymotion-prefix)
nm f ,ss

" airline
let g:lightline         = { 'colorscheme': 'onedark',}
let g:airline_theme     = 'onedark'
let g:netrw_bufsettings = 'noma nomod nu nobl nowrap ro'

 
 "niaho
